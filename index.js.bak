console.log('Iniciando 🚀🚀🚀') 
import { join, dirname } from "path";
import { createRequire } from "module";
import { fileURLToPath } from "url";
import { setupMaster, fork } from "cluster";
import { watchFile, unwatchFile } from "fs";
import cfonts from "cfonts";
import chalk from "chalk";
import { createInterface } from "readline";
import yargs from "yargs";
const __dirname = dirname(fileURLToPath(import.meta.url));
const require = createRequire(__dirname);
const { name, author } = require(join(__dirname, "./package.json"));
const { say } = cfonts;
const rl = createInterface(process.stdin, process.stdout);

say('OGGY MODS BOT\n.... YT.SAC ......\nSAUL HUILLCA', {
font: 'chrome',
align: 'center',
gradient: ['red', 'magenta']})
say(`EL MEJOR BOT DE WHATSAPP 2023\n==================================================\nSERVIDOR : PRIVADO\nVERCION : 1.0.0\nESTADO : ACTIVO\nCREADOR : SAUL H\n copyright by oggy mods 2023\ngracias por su preferencia oggy mods\n==================================================`, {
font: 'console',
align: 'center',
gradient: ['red', 'magenta']});

say(`${name} By Ofc saul yt play`, {
font: 'console',
align: 'center',
colors: ['red']
})
console.log(
 'oggy mods Bot V2',
 'Author: saul h',
 'WA    : +51',
' Base  : dashword')

var isRunning = false;
/**
* Start a js file
* @param {String} file `path/to/file`
*/
function start(file) {
if (isRunning) return
isRunning = true;
let args = [join(__dirname, file), ...process.argv.slice(2)]
  
setupMaster({
exec: args[0],
args: args.slice(1),
})
let p = fork()
p.on('message', data => {
console.log('╭--------- - - - ✓\n┆ ✅ TIEMPO DE ACTIVIDAD ACTUALIZADA\n╰-------------------- - - -', data)
switch (data) {
case 'reset':
p.process.kill()
isRunning = false
start.apply(this, arguments)
break
case 'uptime':
p.send(process.uptime())
break
}})
p.on('exit', (_, code) => {
isRunning = false
console.error('⚠️ 🥺Error Inesperado ⚠️', code)
if (code === 0) return
watchFile(args[0], () => {
unwatchFile(args[0])
start(file)
})
})
let opts = new Object(yargs(process.argv.slice(2)).exitProcess(false).parse())
if (!opts['test'])
if (!rl.listenerCount()) rl.on('line', line => {
p.emit('message', line.trim())
})
//console.log(p)
}
start('main.js')
